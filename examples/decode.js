const { crypto } = require('./index');

const encryptedKey = '{\"iv\":\"J/CN4HtOOdGorU87f8sO/Q==\",\"salt\":\"MWjbfaUQhHQ=\",\"ct\":\"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\"}'

const walletPassword = '5c598f61d45693e28b0c326ce7acfb7e2784240ad01384f90edacafcdf9c8f84';
console.log(JSON.stringify(encryptedKey));

(async function () {
  const decryptedKey = crypto.decrypt(encryptedKey, walletPassword).toString();
  console.log('Decrypted Key:', decryptedKey);
}());
